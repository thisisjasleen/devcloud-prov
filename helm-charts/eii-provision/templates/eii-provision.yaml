# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: etcd
  type: NodePort
  ports:
    - name: tcp
      port: {{ .Values.network.etcd.client_port }}
      targetPort: {{ .Values.network.etcd.client_port }}
      nodePort: {{ .Values.network.etcd.ext.client_port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: etcd
  name: ia-etcd
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      {{- if and .Values.DOCKER_USERNAME .Values.DOCKER_PASSWORD }}
      imagePullSecrets:
      - name: registryauth
      {{- end }}
      containers:
      - name: ia-etcd
        image: {{ .Values.DOCKER_REGISTRY }}openedgeinsights/ia_etcd:{{ .Values.EII_VERSION }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - name: {{ .Values.volumes.etcd_data.name }}
          mountPath: {{ .Values.volumes.etcd_data.location }}
        {{ if eq .Values.env.DEV_MODE false}}
        - name: etcd-certs
          mountPath: /run/secrets/etcd/
        {{ end }}
        env:
        - name: AppName
          value: "ia-etcd"
        - name: DEV_MODE
          value: "{{ .Values.env.DEV_MODE }}"
        - name: ETCD_CLIENT_PORT
          value: "{{ .Values.network.etcd.client_port }}"
        - name: ETCD_PEER_PORT
          value: "{{ .Values.network.etcd.peer_port }}"
        - name: ETCD_NAME
          value: "leader"
        - name: ETCD_INITIAL_CLUSTER_STATE
          value: "new"
        - name: ETCDCTL_API
          value: "3"
        - name: ETCD_DATA_DIR
          value: {{ .Values.volumes.etcd_data.location }}
        {{ if eq .Values.env.DEV_MODE false}}
        - name: ETCD_TRUSTED_CA_FILE
          value: "/run/secrets/etcd/ca_certificate.pem"
        - name: ETCD_CERT_FILE
          value: "/run/secrets/etcd/etcdserver_server_certificate.pem"
        - name: ETCD_KEY_FILE
          value: "/run/secrets/etcd/etcdserver_server_key.pem"
        {{ end }}

      - name: ia-etcd-provision
        image: {{ .Values.DOCKER_REGISTRY }}openedgeinsights/ia_etcd_provision:{{ .Values.EII_VERSION }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: DEV_MODE
          value: "{{ .Values.env.DEV_MODE }}"
        - name: ETCDCTL_API
          value: "3"
        - name: provision_mode
          value: "k8s"
        - name: ETCD_HOST
          value: etcd
        - name: ETCD_CLIENT_PORT
          value: "{{ .Values.network.etcd.client_port }}"
        - name: ETCD_PREFIX
          value: ""
        {{ if eq .Values.env.DEV_MODE false}}
        - name: ETCD_ROOT_PASSWORD
          value: {{ .Values.env.etcd_root_password }}
        - name: ETCD_ROOT_CERT
          value: "/EII/etcd/Certificates/root_client_certificate.pem"
        - name: ETCD_ROOT_KEY
          value: "/EII/etcd/Certificates/root_client_key.pem"
        - name: ETCD_TRUSTED_CA_FILE
          value: "/EII/etcd/Certificates/ca_certificate.pem"
        {{ end }}

        command: ["/bin/sh"]
        args:
         - -c
         - >
           cd /EII/etcd/
           && python3 etcd_provision.py docker-compose.yml
           && while true; do sleep 50000; done

        volumeMounts:
        - name: eii-config
          mountPath: /EII/etcd/config/eii_config.json
          subPath: eii_config.json
        - name: docker-compose
          mountPath: /EII/etcd/docker-compose.yml
          subPath: docker-compose.yml
        {{ if eq .Values.env.DEV_MODE false}}
        - name: all-certs
          mountPath: /EII/etcd/Certificates/
        {{ end }}

      volumes:
      - name: {{ .Values.volumes.etcd_data.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.volumes.etcd_data.name }}
      - name: eii-config
        configMap:
          name: etcd-provision-input
      - name: docker-compose
        configMap:
          name: etcd-provision-input
      {{ if eq .Values.env.DEV_MODE false}}
      - name: all-certs
        secret:
          secretName: eii-certs
      - name: etcd-certs
        secret:
          secretName: eii-certs
          items:
          - key: ca_certificate.pem
            path: ca_certificate.pem
          - key: etcdserver_server_certificate.pem
            path: etcdserver_server_certificate.pem
          - key: etcdserver_server_key.pem
            path: etcdserver_server_key.pem
      {{ end }}
